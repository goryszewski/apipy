services:
  api:
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
      start_interval: 5s
    env_file:
      - .env
    secrets:
      - db_root_password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      FLASK_APP: app.py
      FLASK_RUN_HOST: 0.0.0.0
    # image: 192.168.100.10:5000/apipython:latest
    build: .
    volumes:
      - .:/app
    ports:
      - 5000:5000
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_started

  redis:
    image: "redis:alpine"

  mongo:
    image: "mongo:latest"
    restart: always


  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    depends_on:
      - mysql

  seeder:
    image: "mysql:latest"
    restart: no
    command: /mnt/run.sh
    volumes:
      - ./seeder:/mnt
    depends_on:
      - mysql
      - api
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: store
      MYSQL_USER: api
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_root_password
      - db_password

  mysql:
    image: "mysql:latest"
    ports:
      - 3306:3306
    volumes:
      - data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: store
      MYSQL_USER: api
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_root_password
      - db_password

secrets:
  db_password:
    file: .secrets/db_password.txt
  db_root_password:
    file: .secrets/db_root_password.txt

volumes:
  data: {}
